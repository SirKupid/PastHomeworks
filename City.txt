package Homework7;
/*
 * This is a Program designed to find a central city and its distance to every other city
 * Created by Kellan Cupid
 * 10/30/17
 */
import java.util.Scanner;
public class Problem2 {
	//method for calculating distance
	public static double findDistance(double x1, double y1, double x2, double y2) {
		return Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2-x1,2));
	}
	//will get city coordinates and their sum distance
	public static double[][] getCities() {
		Scanner key = new Scanner(System.in);
		int cityNum;
		System.out.println("How many cities are there?");
		cityNum = key.nextInt();
		double[][] in = new double[cityNum][4];
		double sum = 0;
		for(int i = 0; i < in.length; i++) {
				in[i][0] = i+1;
				System.out.println("What is the x coordinate of city # " + (i+1));
				in[i][1] = key.nextDouble();
				System.out.println("What is the y coordinate of city # " + (i+1));
				in[i][2] = key.nextDouble();
				sum = 0; 
				}
			
		for(int i = 0 ; i < in.length; i++) {
			sum= 0;
			for(int x = 0; x < in[0].length-1; x++) {
				sum += findDistance(in[i][1], in[i][2], in[x][1], in[x][2]);
		}
			in[i][3] = sum;
		}
		return in;
	}
	//finds central city and prints its distance to the other cities
	public static void findCentral(double[][] in) {
		double min = in[0][1];
		double cen = 0;
		for(int i = 0; i < in.length; i++) {
			for(int x = 1; x < in[0].length; x++) {
				if(min>in[i][x]) {
					min = in[i][x];
					cen = i;
				}
			}
		}
		int index = (int)cen;

		for(int i = 0; i < in.length; i++) {
				if(index != i) {
				System.out.println("The distance between city " + (index+1) + " and city " + (i+1) + " is " 
						+ findDistance(in[index][1], in[index][2], in[i][1], in[i][2]));
			}
			
		}
	}
	
	public static void main(String[] args) {
		//call methods
		double[][] one = getCities();
		System.out.println();
		findCentral(one);
	}

}
